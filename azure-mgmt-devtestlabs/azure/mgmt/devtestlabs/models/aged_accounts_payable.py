# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class AgedAccountsPayable(Model):
    """AgedAccountsPayable.

    :param vendor_id: The vendorId property for the agedAccountsPayable entity
    :type vendor_id: str
    :param vendor_number: The vendorNumber property for the
     agedAccountsPayable entity
    :type vendor_number: str
    :param name: The name property for the agedAccountsPayable entity
    :type name: str
    :param currency_code: The currencyCode property for the
     agedAccountsPayable entity
    :type currency_code: str
    :param balance_due: The balanceDue property for the agedAccountsPayable
     entity
    :type balance_due: decimal.Decimal
    :param current_amount: The currentAmount property for the
     agedAccountsPayable entity
    :type current_amount: decimal.Decimal
    :param period1_amount: The period1Amount property for the
     agedAccountsPayable entity
    :type period1_amount: decimal.Decimal
    :param period2_amount: The period2Amount property for the
     agedAccountsPayable entity
    :type period2_amount: decimal.Decimal
    :param period3_amount: The period3Amount property for the
     agedAccountsPayable entity
    :type period3_amount: decimal.Decimal
    :param aged_as_of_date: The agedAsOfDate property for the
     agedAccountsPayable entity
    :type aged_as_of_date: datetime
    :param period_length_filter: The periodLengthFilter property for the
     agedAccountsPayable entity
    :type period_length_filter: str
    """

    _validation = {
        'vendor_number': {'max_length': 20},
        'name': {'max_length': 100},
        'currency_code': {'max_length': 10},
        'period_length_filter': {'max_length': 10},
    }

    _attribute_map = {
        'vendor_id': {'key': 'vendorId', 'type': 'str'},
        'vendor_number': {'key': 'vendorNumber', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'currency_code': {'key': 'currencyCode', 'type': 'str'},
        'balance_due': {'key': 'balanceDue', 'type': 'decimal'},
        'current_amount': {'key': 'currentAmount', 'type': 'decimal'},
        'period1_amount': {'key': 'period1Amount', 'type': 'decimal'},
        'period2_amount': {'key': 'period2Amount', 'type': 'decimal'},
        'period3_amount': {'key': 'period3Amount', 'type': 'decimal'},
        'aged_as_of_date': {'key': 'agedAsOfDate', 'type': 'iso-8601'},
        'period_length_filter': {'key': 'periodLengthFilter', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(AgedAccountsPayable, self).__init__(**kwargs)
        self.vendor_id = kwargs.get('vendor_id', None)
        self.vendor_number = kwargs.get('vendor_number', None)
        self.name = kwargs.get('name', None)
        self.currency_code = kwargs.get('currency_code', None)
        self.balance_due = kwargs.get('balance_due', None)
        self.current_amount = kwargs.get('current_amount', None)
        self.period1_amount = kwargs.get('period1_amount', None)
        self.period2_amount = kwargs.get('period2_amount', None)
        self.period3_amount = kwargs.get('period3_amount', None)
        self.aged_as_of_date = kwargs.get('aged_as_of_date', None)
        self.period_length_filter = kwargs.get('period_length_filter', None)
