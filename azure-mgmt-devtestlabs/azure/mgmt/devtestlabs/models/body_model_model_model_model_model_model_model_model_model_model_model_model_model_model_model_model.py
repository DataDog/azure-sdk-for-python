# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel(Model):
    """BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel.

    :param id: The id property for the currency entity
    :type id: str
    :param code: The code property for the currency entity
    :type code: str
    :param display_name: The displayName property for the currency entity
    :type display_name: str
    :param symbol: The symbol property for the currency entity
    :type symbol: str
    :param amount_decimal_places: The amountDecimalPlaces property for the
     currency entity
    :type amount_decimal_places: str
    :param amount_rounding_precision: The amountRoundingPrecision property for
     the currency entity
    :type amount_rounding_precision: decimal.Decimal
    :param last_modified_date_time: The lastModifiedDateTime property for the
     currency entity
    :type last_modified_date_time: datetime
    """

    _validation = {
        'code': {'max_length': 10},
        'display_name': {'max_length': 30},
        'symbol': {'max_length': 10},
        'amount_decimal_places': {'max_length': 5},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'code': {'key': 'code', 'type': 'str'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'symbol': {'key': 'symbol', 'type': 'str'},
        'amount_decimal_places': {'key': 'amountDecimalPlaces', 'type': 'str'},
        'amount_rounding_precision': {'key': 'amountRoundingPrecision', 'type': 'decimal'},
        'last_modified_date_time': {'key': 'lastModifiedDateTime', 'type': 'iso-8601'},
    }

    def __init__(self, **kwargs):
        super(BodyModelModelModelModelModelModelModelModelModelModelModelModelModelModelModelModel, self).__init__(**kwargs)
        self.id = kwargs.get('id', None)
        self.code = kwargs.get('code', None)
        self.display_name = kwargs.get('display_name', None)
        self.symbol = kwargs.get('symbol', None)
        self.amount_decimal_places = kwargs.get('amount_decimal_places', None)
        self.amount_rounding_precision = kwargs.get('amount_rounding_precision', None)
        self.last_modified_date_time = kwargs.get('last_modified_date_time', None)
