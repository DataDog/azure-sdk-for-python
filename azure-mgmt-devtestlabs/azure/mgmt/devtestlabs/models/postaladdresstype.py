# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Postaladdresstype(Model):
    """Postaladdresstype.

    :param street: The street property for the postaladdresstype entity
    :type street: str
    :param city: The city property for the postaladdresstype entity
    :type city: str
    :param state: The state property for the postaladdresstype entity
    :type state: str
    :param country_letter_code: The countryLetterCode property for the
     postaladdresstype entity
    :type country_letter_code: str
    :param postal_code: The postalCode property for the postaladdresstype
     entity
    :type postal_code: str
    :param customer_financial_details:
    :type customer_financial_details:
     list[~azure.mgmt.devtestlabs.models.CustomerFinancialDetail]
    :param picture:
    :type picture: list[~azure.mgmt.devtestlabs.models.Picture]
    :param default_dimensions:
    :type default_dimensions:
     list[~azure.mgmt.devtestlabs.models.DefaultDimensions]
    :param currency:
    :type currency: ~azure.mgmt.devtestlabs.models.Currency
    :param payment_term:
    :type payment_term: ~azure.mgmt.devtestlabs.models.PaymentTerm
    :param shipment_method:
    :type shipment_method: ~azure.mgmt.devtestlabs.models.ShipmentMethod
    :param payment_method:
    :type payment_method: ~azure.mgmt.devtestlabs.models.PaymentMethod
    """

    _validation = {
        'street': {'max_length': 152},
        'city': {'max_length': 30},
        'state': {'max_length': 30},
        'country_letter_code': {'max_length': 10},
        'postal_code': {'max_length': 20},
    }

    _attribute_map = {
        'street': {'key': 'street', 'type': 'str'},
        'city': {'key': 'city', 'type': 'str'},
        'state': {'key': 'state', 'type': 'str'},
        'country_letter_code': {'key': 'countryLetterCode', 'type': 'str'},
        'postal_code': {'key': 'postalCode', 'type': 'str'},
        'customer_financial_details': {'key': 'customerFinancialDetails', 'type': '[CustomerFinancialDetail]'},
        'picture': {'key': 'picture', 'type': '[Picture]'},
        'default_dimensions': {'key': 'defaultDimensions', 'type': '[DefaultDimensions]'},
        'currency': {'key': 'currency', 'type': 'Currency'},
        'payment_term': {'key': 'paymentTerm', 'type': 'PaymentTerm'},
        'shipment_method': {'key': 'shipmentMethod', 'type': 'ShipmentMethod'},
        'payment_method': {'key': 'paymentMethod', 'type': 'PaymentMethod'},
    }

    def __init__(self, **kwargs):
        super(Postaladdresstype, self).__init__(**kwargs)
        self.street = kwargs.get('street', None)
        self.city = kwargs.get('city', None)
        self.state = kwargs.get('state', None)
        self.country_letter_code = kwargs.get('country_letter_code', None)
        self.postal_code = kwargs.get('postal_code', None)
        self.customer_financial_details = kwargs.get('customer_financial_details', None)
        self.picture = kwargs.get('picture', None)
        self.default_dimensions = kwargs.get('default_dimensions', None)
        self.currency = kwargs.get('currency', None)
        self.payment_term = kwargs.get('payment_term', None)
        self.shipment_method = kwargs.get('shipment_method', None)
        self.payment_method = kwargs.get('payment_method', None)
